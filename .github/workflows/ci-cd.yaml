name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ github.run_number }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://npm.pkg.github.com/'

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm test -- --coverage

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: SonarCloud Quality Gate Check
        uses: sonarsource/sonarqube-quality-gate-action@v1.1.0
        with:
          scanMetadataReportFile: .scannerwork/report-task.txt
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
      - name: Build Docker image
        run: docker build -t ghcr.io/cloudops-code/inventoryapp:${IMAGE_TAG} .

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GIHUB_PAT }}

      - name: Push Docker image to GHCR
        run: docker push ghcr.io/cloudops-code/inventoryapp:${IMAGE_TAG}

      - name: Set npm version from GitHub run number
        run: |
          NEW_VERSION="1.0.${GITHUB_RUN_NUMBER}"
          npm version --no-git-tag-version $NEW_VERSION

      - name: Publish npm package to GitHub Packages
        run: npm publish --registry=https://npm.pkg.github.com/
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GIHUB_PAT }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: inventory-app-artifacts
          path: |
            dist/
            build/
            package.json
            package-lock.json
            Dockerfile
            server.js
            public/
            views/
            src/
            models/
            routes/
            db/
            data/